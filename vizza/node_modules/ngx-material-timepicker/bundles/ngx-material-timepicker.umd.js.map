{
  "version": 3,
  "file": "ngx-material-timepicker.umd.js",
  "sources": [
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/ngx-material-timepicker.module.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/focus-anchor.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/overlay.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/ngx-timepicker.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/pipes/time-formatter.pipe.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/ngx-material-timepicker.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/services/ngx-material-timepicker.service.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/models/time-format.enum.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/models/time-period.enum.ts"
  ],
  "sourcesContent": [
    "import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxMaterialTimepickerComponent} from './ngx-material-timepicker.component';\r\nimport {StyleSanitizerPipe} from './pipes/style-sanitizer.pipe';\r\nimport {NgxMaterialTimepickerHoursFaceComponent} from './components/timepicker-hours-face/ngx-material-timepicker-hours-face.component';\r\nimport {NgxMaterialTimepickerMinutesFaceComponent} from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\r\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\r\nimport {NgxMaterialTimepickerFaceComponent} from './components/timepicker-face/ngx-material-timepicker-face.component';\r\nimport {TimeFormatterPipe} from './pipes/time-formatter.pipe';\r\nimport {NgxMaterialTimepickerButtonComponent} from './components/timepicker-button/ngx-material-timepicker-button.component';\r\nimport {TimepickerDirective} from './directives/ngx-timepicker.directive';\r\nimport {OverlayDirective} from './directives/overlay.directive';\r\nimport {NgxMaterialTimepickerEventService} from './services/ngx-material-timepicker-event.service';\r\nimport {FocusAnchorDirective} from './directives/focus-anchor.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [\r\n        NgxMaterialTimepickerComponent,\r\n        TimepickerDirective\r\n    ],\r\n    declarations: [\r\n        NgxMaterialTimepickerComponent,\r\n        StyleSanitizerPipe,\r\n        NgxMaterialTimepickerHoursFaceComponent,\r\n        NgxMaterialTimepickerMinutesFaceComponent,\r\n        NgxMaterialTimepickerFaceComponent,\r\n        TimeFormatterPipe,\r\n        NgxMaterialTimepickerButtonComponent,\r\n        TimepickerDirective,\r\n        OverlayDirective,\r\n        FocusAnchorDirective,\r\n    ]\r\n})\r\nexport class NgxMaterialTimepickerModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxMaterialTimepickerModule,\r\n            providers: [NgxMaterialTimepickerService, NgxMaterialTimepickerEventService]\r\n        }\r\n    }\r\n}\r\n",
    "import {AfterViewInit, Directive, ElementRef, Inject, OnDestroy, Optional} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[focusAnchor]'\r\n})\r\nexport class FocusAnchorDirective implements AfterViewInit, OnDestroy {\r\n\r\n    private activeElement: HTMLElement;\r\n    private element: HTMLElement;\r\n\r\n    constructor(@Optional() @Inject(DOCUMENT) private document: any,\r\n                elementRef: ElementRef) {\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.activeElement = <HTMLElement>this.document.activeElement;\r\n        // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\r\n        setTimeout(() => this.element.focus())\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.activeElement.focus();\r\n    }\r\n}\r\n",
    "import {Directive, HostListener} from '@angular/core';\r\nimport {NgxMaterialTimepickerEventService,} from '../services/ngx-material-timepicker-event.service';\r\n\r\n@Directive({\r\n    selector: '[overlay]'\r\n})\r\nexport class OverlayDirective {\r\n\r\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(e: MouseEvent) {\r\n        this.eventService.backdropClickSubject.next(e);\r\n        e.preventDefault();\r\n    }\r\n\r\n}\r\n",
    "import {AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, OnDestroy} from '@angular/core';\r\nimport {NgxMaterialTimepickerComponent} from '../ngx-material-timepicker.component';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {TimeFormat} from '../models/time-format.enum';\r\nimport * as moment_ from 'moment';\r\n//Workaround for error \"Cannot call a namespace ('moment')\r\nconst moment = moment_;\r\n\r\nconst VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TimepickerDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[ngxTimepicker]',\r\n    providers: [VALUE_ACCESSOR],\r\n    host: {\r\n        '[disabled]': 'disabled',\r\n        '(input)': 'onInput($event.target.value)',\r\n        '(blur)': 'onTouched()',\r\n    }\r\n})\r\nexport class TimepickerDirective implements AfterViewInit, ControlValueAccessor, OnDestroy {\r\n\r\n    @Input('ngxTimepicker') timepicker: NgxMaterialTimepickerComponent;\r\n    @Input() disabled: boolean;\r\n    onTouched = () => {\r\n    };\r\n    private timepickerSubscription: Subscription;\r\n    private onChange: (value: any) => void = () => {\r\n    };\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n    }\r\n\r\n    private _format: TimeFormat;\r\n\r\n    @Input()\r\n    set format(value: number) {\r\n        this._format = value === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\r\n    }\r\n\r\n    private _value: string;\r\n\r\n    @Input()\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: string) {\r\n        this._value = formatTime(value, this._format);\r\n        this.elementRef.nativeElement.value = value ? formatTime(value, this._format) : '';\r\n        this.timepicker.setDefaultTime(formatTime(value));\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.timepicker) {\r\n            this.timepickerSubscription = this.timepicker.timeSet.subscribe((time: string) => {\r\n                this.value = time;\r\n                this.onChange(time);\r\n                this.onTouched();\r\n            })\r\n        }\r\n    }\r\n\r\n    onInput(value: string) {\r\n        this._value = value;\r\n        this.onChange(value);\r\n    }\r\n\r\n    @HostListener('click')\r\n    onClick() {\r\n        this.timepicker.open();\r\n    }\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (value: any) => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.timepickerSubscription.unsubscribe();\r\n    }\r\n}\r\n\r\nfunction formatTime(time: string, format = TimeFormat.TWELVE): string {\r\n    return moment(time, format).format(format);\r\n}\r\n",
    "import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-button',\r\n    template: `<button class=\"timepicker-button\" type=\"button\">\r\n  <span><ng-content></ng-content></span>\r\n</button>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-button{display:inline-block;height:36px;min-width:88px;line-height:36px;border:12px;border-radius:2px;background-color:transparent;color:#00bfff;text-align:center;-webkit-transition:all 450ms cubic-bezier(.23,1,.32,1);transition:all 450ms cubic-bezier(.23,1,.32,1);overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;cursor:pointer;outline:0}.timepicker-button:focus,.timepicker-button:hover{background-color:rgba(153,153,153,.2)}.timepicker-button>span{font-size:14px;text-transform:uppercase;font-weight:600;padding-left:16px;padding-right:16px;font-family:Roboto,sans-serif}`]\r\n})\r\nexport class NgxMaterialTimepickerButtonComponent {\r\n}\r\n",
    "import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport {TimeUnit} from '../models/time-unit.enum';\r\n\r\n@Pipe({\r\n\tname: 'timeFormatter'\r\n})\r\nexport class TimeFormatterPipe implements PipeTransform {\r\n\r\n\ttransform(time: number, timeUnit: TimeUnit): any {\r\n\t\tif (!time) {\r\n\t\t\treturn time;\r\n\t\t}\r\n\t\tswitch (timeUnit) {\r\n\t\t\tcase TimeUnit.HOUR:\r\n\t\t\t\treturn moment.utc(time * 3600 * 1000).format('HH');\r\n\t\t\tcase TimeUnit.MINUTE:\r\n\t\t\t\treturn moment.utc(time * 60 * 1000).format('mm');\r\n\t\t}\r\n\t}\r\n\r\n}\r\n",
    "import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input, OnChanges,\r\n    Output, SimpleChanges,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-face',\r\n    template: `<div class=\"clock-face\" #clockFace>\r\n  <div *ngIf=\"unit !== timeUnit.MINUTE;else minutesFace\" class=\"clock-face__container\">\r\n    <div class=\"clock-face__number\"\r\n         [style.transform]=\"'rotateZ('+ time.angle +'deg) translateX(-50%)' | styleSanitizer\"\r\n         *ngFor=\"let time of faceTime\">\r\n\t\t\t<span [style.transform]=\"'rotateZ(-'+ time.angle +'deg)' | styleSanitizer\"\r\n            [ngClass]=\"{'active': time.time === (selectedTime.time)}\">{{time.time}}</span>\r\n    </div>\r\n  </div>\r\n  <span class=\"clock-face__clock-hand\" [ngClass]=\"{'clock-face__clock-hand_minute': unit === timeUnit.MINUTE}\"\r\n        #clockHand></span>\r\n</div>\r\n<ng-template #minutesFace>\r\n  <div class=\"clock-face__container\">\r\n    <div class=\"clock-face__number\"\r\n         [style.transform]=\"'rotateZ('+ time.angle +'deg) translateX(-50%)' | styleSanitizer\"\r\n         *ngFor=\"let time of faceTime\">\r\n\t<span [style.transform]=\"'rotateZ(-'+ time.angle +'deg)' | styleSanitizer\"\r\n        [ngClass]=\"{'active': (selectedTime.time === time.time) && time.time % 5 === 0}\">\r\n\t{{time.time % 5 === 0 ? time.time : ''}}</span>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.clock-face{width:290px;height:290px;border-radius:50%;background-color:#f0f0f0;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:20px;-webkit-box-sizing:border-box;box-sizing:border-box}.clock-face__container{margin-left:-2px}.clock-face__number{position:absolute;font-size:16px;color:grey;-webkit-transform-origin:0 100%;transform-origin:0 100%;height:calc(290px / 2 - 20px);width:50px;text-align:center;z-index:2}.clock-face__number>span{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:30px;height:30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:auto;border-radius:50%;font-weight:500;font-family:Roboto,sans-serif}.clock-face__number>span.active{background-color:#00bfff;color:#fff}.clock-face__clock-hand{display:block;height:110px;width:2px;background-color:#00bfff;-webkit-transform-origin:0 100%;transform-origin:0 100%;position:absolute;top:calc(50% - 110px);z-index:1}.clock-face__clock-hand:after{content:'';width:7px;height:7px;border-radius:50%;background-color:#00bfff;position:absolute;bottom:-3px;left:-3.5px}.clock-face__clock-hand_minute:before{content:'';width:7px;height:7px;background-color:#fff;border:4px solid #00bfff;border-radius:50%;position:absolute;top:-3px;left:calc(50% - 8px);-webkit-box-sizing:content-box;box-sizing:content-box}@media (max-width:1023px) and (orientation:landscape){.clock-face{width:225px;height:225px;padding:5px}.clock-face__number{height:calc(225px / 2 - 5px)}.clock-face__clock-hand{height:90px;top:calc(50% - 90px)}}`]\r\n})\r\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    @Input() faceTime: ClockFaceTime[];\r\n    @Input() selectedTime: ClockFaceTime;\r\n    @Input() unit: TimeUnit;\r\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\r\n\r\n    @ViewChild('clockFace') clockFace: ElementRef;\r\n    @ViewChild('clockHand') clockHand: ElementRef;\r\n\r\n    private isStarted: boolean;\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.setClockHandPosition();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes && changes['selectedTime'].currentValue) {\r\n            this.selectedTime = this.faceTime.find(time => time.time === changes['selectedTime'].currentValue.time);\r\n        }\r\n    }\r\n\r\n    @HostListener('touchstart', ['$event'])\r\n    @HostListener('mousedown', ['$event'])\r\n    onMousedown(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = true;\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\r\n    @HostListener('touchend', ['$event.changedTouches[0]'])\r\n    @HostListener('mousemove', ['$event'])\r\n    selectTime(e: MouseEvent | Touch): void {\r\n\r\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\r\n            return;\r\n        }\r\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\r\n\r\n        //Get x0 and y0 of the circle\r\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\r\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\r\n        //Counting the arctangent and convert it to from radian to deg\r\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\r\n        //Get angle according to quadrant\r\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\r\n        //Round angle according to angle step\r\n        const roundedAngle = roundAngle(circleAngle, 360 / this.faceTime.length);\r\n        const selectedTime = this.faceTime.find(val => val.angle === roundedAngle);\r\n\r\n        this.clockHand.nativeElement.style.transform = `rotate(${roundedAngle}deg)`;\r\n        this.timeChange.next(selectedTime);\r\n    }\r\n\r\n    @HostListener('touchend', ['$event'])\r\n    @HostListener('mouseup', ['$event'])\r\n    onMouseup(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = false;\r\n    }\r\n\r\n    private setClockHandPosition() {\r\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\r\n    }\r\n}\r\n\r\nfunction roundAngle(angle: number, step: number): number {\r\n    const roundedAngle = Math.round(angle / step) * step;\r\n    return roundedAngle === 0 ? 360 : roundedAngle;\r\n}\r\n\r\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\r\n    if (y > y0 && x >= x0) {\r\n        return 180 - currentAngle;\r\n    } else if (y > y0 && x < x0) {\r\n        return 180 + currentAngle;\r\n    } else if (y < y0 && x < x0) {\r\n        return 360 - currentAngle;\r\n    } else {\r\n        return currentAngle;\r\n    }\r\n}\r\n",
    "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\n\r\nconst MINUTES = 60;\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-minutes-face',\r\n    template: `<ngx-material-timepicker-face [faceTime]=\"minutesList\" [selectedTime]=\"selectedMinute\"\r\n                              (timeChange)=\"minuteChange.next($event)\" [unit]=\"timeUnit.MINUTE\"></ngx-material-timepicker-face>\r\n`\r\n})\r\nexport class NgxMaterialTimepickerMinutesFaceComponent {\r\n\r\n    minutesList: ClockFaceTime[] = [];\r\n    timeUnit = TimeUnit;\r\n\r\n    @Input() selectedMinute: ClockFaceTime;\r\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\r\n\r\n    constructor() {\r\n        const angleStep = 360 / MINUTES;\r\n        this.minutesList = Array(MINUTES).fill(0).map((v, i) => {\r\n            const index = (v + i);\r\n            const angle = angleStep * index;\r\n            return {time: index === 0 ? '00' : index, angle: angle !== 0 ? angle : 360};\r\n        })\r\n    }\r\n}\r\n\r\n",
    "import {Component, EventEmitter, HostListener, Input, Output} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\n\r\nconst HOURS = 12;\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-hours-face',\r\n    template: `<ngx-material-timepicker-face [selectedTime]=\"selectedHour\" [faceTime]=\"hoursList\"\r\n                              (timeChange)=\"hourChange.next($event)\"></ngx-material-timepicker-face>\r\n`\r\n})\r\nexport class NgxMaterialTimepickerHoursFaceComponent {\r\n\r\n    hoursList: ClockFaceTime[] = [];\r\n\r\n    @Input() selectedHour: ClockFaceTime;\r\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() hourSelected = new EventEmitter<null>();\r\n\r\n    constructor() {\r\n        const angleStep = 360 / HOURS;\r\n        this.hoursList = Array(HOURS).fill(1).map((v, i) => {\r\n            return {time: v + i, angle: angleStep * (v + i)};\r\n        });\r\n    }\r\n\r\n    @HostListener('touchend')\r\n    @HostListener('click')\r\n    onClick() {\r\n        this.hourSelected.next();\r\n    }\r\n}\r\n\r\n",
    "import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n\tname: 'styleSanitizer'\r\n})\r\nexport class StyleSanitizerPipe implements PipeTransform {\r\n\r\n\tconstructor(private domSanitizer: DomSanitizer) {\r\n\t}\r\n\r\n\ttransform(value: string): any {\r\n\t\tif (!value) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn this.domSanitizer.bypassSecurityTrustStyle(value);\r\n\t}\r\n\r\n}\r\n",
    "import {Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ClockFaceTime} from './models/clock-face-time.interface';\r\nimport {TimePeriod} from './models/time-period.enum';\r\nimport {merge, Subscription} from 'rxjs';\r\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\r\nimport {TimeUnit} from './models/time-unit.enum';\r\nimport {animate, AnimationEvent, style, transition, trigger} from '@angular/animations';\r\nimport {NgxMaterialTimepickerEventService,} from './services/ngx-material-timepicker-event.service';\r\nimport {filter} from 'rxjs/operators';\r\n\r\n\r\nexport enum AnimationState {\r\n    ENTER = 'enter',\r\n    LEAVE = 'leave'\r\n}\r\n\r\nconst ESCAPE = 27;\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker',\r\n    template: `<div class=\"timepicker-backdrop-overlay\" *ngIf=\"isOpened\" overlay></div>\r\n<div class=\"timepicker-overlay\" *ngIf=\"isOpened\">\r\n    <div class=\"timepicker\" [@timepicker]=\"animationState\" (@timepicker.done)=\"animationDone($event)\" tabindex=\"0\"\r\n         focusAnchor>\r\n        <header class=\"timepicker__header\">\r\n            <div class=\"timepicker-dial\">\r\n                <div class=\"timepicker-dial__time\">\r\n\t\t\t\t<span class=\"timepicker-dial__item\"\r\n                      [ngClass]=\"{'timepicker-dial__item_active': activeTimeUnit === timeUnit.HOUR}\"\r\n                      (click)=\"changeTimeUnit(timeUnit.HOUR)\">\r\n\t\t\t\t\t{{selectedHour?.time | timeFormatter: timeUnit.HOUR}}</span>:<span\r\n                    class=\"timepicker-dial__item\"\r\n                    [ngClass]=\"{'timepicker-dial__item_active': activeTimeUnit === timeUnit.MINUTE}\"\r\n                    (click)=\"changeTimeUnit(timeUnit.MINUTE)\">{{selectedMinute?.time | timeFormatter: timeUnit.MINUTE}}</span>\r\n                </div>\r\n                <div class=\"timepicker-dial__period\">\r\n\t\t\t<span class=\"timepicker-dial__item\"\r\n                  [ngClass]=\"{'timepicker-dial__item_active': selectedPeriod === timePeriod.AM}\"\r\n                  (click)=\"changePeriod(timePeriod.AM)\">AM</span>\r\n                    <span class=\"timepicker-dial__item\"\r\n                          [ngClass]=\"{'timepicker-dial__item_active': selectedPeriod === timePeriod.PM}\"\r\n                          (click)=\"changePeriod(timePeriod.PM)\">PM</span>\r\n                </div>\r\n            </div>\r\n        </header>\r\n        <div class=\"timepicker__main-content\">\r\n            <div class=\"timepicker__body\" [ngSwitch]=\"activeTimeUnit\">\r\n                <ngx-material-timepicker-hours-face *ngSwitchCase=\"timeUnit.HOUR\"\r\n                                                    (hourChange)=\"onHourChange($event)\"\r\n                                                    [selectedHour]=\"selectedHour\"\r\n                                                    (hourSelected)=\"activeTimeUnit = timeUnit.MINUTE\"></ngx-material-timepicker-hours-face>\r\n                <ngx-material-timepicker-minutes-face *ngSwitchCase=\"timeUnit.MINUTE\"\r\n                                                      [selectedMinute]=\"selectedMinute\"\r\n                                                      (minuteChange)=\"onMinuteChange($event)\"></ngx-material-timepicker-minutes-face>\r\n            </div>\r\n            <div class=\"timepicker__actions\">\r\n                <div (click)=\"close()\">\r\n                    <ng-container *ngTemplateOutlet=\"cancelBtnTmpl ? cancelBtnTmpl : cancelBtnDefault\"></ng-container>\r\n                </div>\r\n                <div (click)=\"setTime()\">\r\n                    <ng-container\r\n                        *ngTemplateOutlet=\"confirmBtnTmpl ? confirmBtnTmpl : confirmBtnDefault\"></ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #cancelBtnDefault>\r\n    <ngx-material-timepicker-button>Cancel</ngx-material-timepicker-button>\r\n</ng-template>\r\n<ng-template #confirmBtnDefault>\r\n    <ngx-material-timepicker-button>Ok</ngx-material-timepicker-button>\r\n</ng-template>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-backdrop-overlay{position:fixed;top:0;bottom:0;right:0;left:0;background-color:rgba(0,0,0,.3);z-index:999;pointer-events:auto}.timepicker-overlay{position:fixed;top:0;left:0;width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:999;pointer-events:none}.timepicker{width:300px;border-radius:2px;-webkit-box-shadow:rgba(0,0,0,.25) 0 14px 45px,rgba(0,0,0,.22) 0 10px 18px;box-shadow:rgba(0,0,0,.25) 0 14px 45px,rgba(0,0,0,.22) 0 10px 18px;outline:0;position:static;z-index:999;pointer-events:auto}.timepicker__header{background-color:#00bfff;padding:15px 30px}.timepicker__body{background-color:#fff;padding:15px 5px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.timepicker__actions{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;padding:15px;background-color:#fff}.timepicker-dial{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-tap-highlight-color:transparent}.timepicker-dial__time{line-height:normal;font-size:50px;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.timepicker-dial__period{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-left:10px;font-size:18px;font-weight:500;font-family:Roboto,sans-serif;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.timepicker-dial__item{cursor:pointer;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}.timepicker-dial__item_active{color:#fff}@media (max-width:1023px) and (orientation:landscape){.timepicker{display:-webkit-box;display:-ms-flexbox;display:flex;width:515px}.timepicker__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.timepicker__main-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}.timepicker__actions{padding:5px;margin-top:-1px}.timepicker-dial{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.timepicker-dial__period{margin-left:0}}`],\r\n    animations: [\r\n        trigger('timepicker', [\r\n            transition(`* => ${AnimationState.ENTER}`, [\r\n                style({transform: 'translateY(-30%)'}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\r\n            ]),\r\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\r\n                style({transform: 'translateY(0)', opacity: 1}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\r\n            ])\r\n        ])\r\n    ],\r\n    providers: [NgxMaterialTimepickerService]\r\n})\r\nexport class NgxMaterialTimepickerComponent implements OnInit, OnDestroy {\r\n\r\n    selectedHour: ClockFaceTime;\r\n    selectedMinute: ClockFaceTime;\r\n    selectedPeriod: TimePeriod;\r\n\r\n    timePeriod = TimePeriod;\r\n    timeUnit = TimeUnit;\r\n    activeTimeUnit = TimeUnit.HOUR;\r\n\r\n    isOpened = false;\r\n    animationState: AnimationState;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\r\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\r\n    @Input('ESC') isEsc = true;\r\n    @Output() timeSet = new EventEmitter<string>();\r\n\r\n    constructor(private timepickerService: NgxMaterialTimepickerService,\r\n                private eventService: NgxMaterialTimepickerEventService) {\r\n\r\n        this.subscriptions.push(merge(this.eventService.backdropClick,\r\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\r\n            .subscribe(() => this.close()));\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscriptions.push(this.timepickerService.selectedHour.subscribe(hour => this.selectedHour = hour));\r\n        this.subscriptions.push(this.timepickerService.selectedMinute.subscribe(minute => this.selectedMinute = minute));\r\n        this.subscriptions.push(this.timepickerService.selectedPeriod.subscribe(period => this.selectedPeriod = period));\r\n\r\n    }\r\n\r\n    onHourChange(hour: ClockFaceTime): void {\r\n        this.timepickerService.hour = hour;\r\n    }\r\n\r\n    onMinuteChange(minute: ClockFaceTime): void {\r\n        this.timepickerService.minute = minute;\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.timepickerService.period = period;\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit) {\r\n        this.activeTimeUnit = unit;\r\n    }\r\n\r\n    setTime() {\r\n        this.timeSet.next(this.timepickerService.fullTime);\r\n        this.close();\r\n    }\r\n\r\n    setDefaultTime(time: string): void {\r\n        this.timepickerService.defaultTime = time;\r\n    }\r\n\r\n    open() {\r\n        this.isOpened = true;\r\n        this.animationState = AnimationState.ENTER;\r\n    }\r\n\r\n    close() {\r\n        this.animationState = AnimationState.LEAVE;\r\n    }\r\n\r\n    animationDone(event: AnimationEvent): void {\r\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\r\n            this.isOpened = false;\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeydown(e: KeyboardEvent) {\r\n        this.eventService.keydownEventSubject.next(e);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n    }\r\n}\r\n",
    "import {Injectable} from '@angular/core';\r\nimport {Subject, Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NgxMaterialTimepickerEventService {\r\n\r\n    backdropClickSubject: Subject<MouseEvent> = new Subject();\r\n    keydownEventSubject: Subject<KeyboardEvent> = new Subject();\r\n\r\n    get backdropClick(): Observable<MouseEvent> {\r\n        return this.backdropClickSubject.asObservable();\r\n    }\r\n\r\n    get keydownEvent(): Observable<KeyboardEvent> {\r\n        return this.keydownEventSubject.asObservable();\r\n    }\r\n\r\n}\r\n",
    "import {Injectable} from '@angular/core';\r\nimport {ClockFaceTime} from '../models/clock-face-time.interface';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {TimePeriod} from '../models/time-period.enum';\r\nimport * as moment_ from 'moment';\r\nimport {TimeFormat} from '../models/time-format.enum';\r\n\r\nconst moment = moment_;\r\n\r\nconst DEFAULT_HOUR: ClockFaceTime = {\r\n    time: 12,\r\n    angle: 360\r\n};\r\nconst DEFAULT_MINUTE: ClockFaceTime = {\r\n    time: '00',\r\n    angle: 360\r\n};\r\n\r\n@Injectable()\r\nexport class NgxMaterialTimepickerService {\r\n\r\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\r\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\r\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\r\n\r\n    set hour(hour: ClockFaceTime) {\r\n        this.hourSubject.next(hour);\r\n    }\r\n\r\n    get selectedHour(): Observable<ClockFaceTime> {\r\n        return this.hourSubject.asObservable();\r\n    }\r\n\r\n    set minute(minute: ClockFaceTime) {\r\n        this.minuteSubject.next(minute);\r\n    }\r\n\r\n    get selectedMinute(): Observable<ClockFaceTime> {\r\n        return this.minuteSubject.asObservable();\r\n    }\r\n\r\n    set period(period: TimePeriod) {\r\n        this.periodSubject.next(period);\r\n    }\r\n\r\n    get selectedPeriod(): Observable<TimePeriod> {\r\n        return this.periodSubject.asObservable();\r\n    }\r\n\r\n    get fullTime(): string {\r\n        const hour = this.hourSubject.getValue().time;\r\n        const minute = this.minuteSubject.getValue().time;\r\n        const period = this.periodSubject.getValue();\r\n\r\n        return `${hour}:${minute} ${period}`;\r\n    }\r\n\r\n    set defaultTime(time: string) {\r\n        const defaultTime = moment(time, TimeFormat.TWENTY_FOUR).toDate();\r\n\r\n        if (moment(defaultTime).isValid()) {\r\n            this.hour = {...DEFAULT_HOUR, time: defaultTime.getHours()};\r\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes() === 0 ? '00' : defaultTime.getMinutes()};\r\n            this.period = <TimePeriod>time.substr(time.length - 2).toUpperCase();\r\n        }\r\n    }\r\n}\r\n",
    "export enum TimeFormat {\r\n\tTWELVE = 'hh:mm a',\r\n\tTWENTY_FOUR = 'HH:mm'\r\n}\r\n",
    "export enum TimePeriod {\r\n\tAM = 'AM',\r\n\tPM = 'PM'\r\n}\r\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "ElementRef",
    "Optional",
    "Inject",
    "DOCUMENT",
    "Directive",
    "HostListener",
    "moment",
    "Input",
    "forwardRef",
    "NG_VALUE_ACCESSOR",
    "moment_",
    "Component",
    "Pipe",
    "moment.utc",
    "ViewChild",
    "Output",
    "EventEmitter",
    "DomSanitizer",
    "animate",
    "style",
    "transition",
    "trigger",
    "merge",
    "filter",
    "Injectable",
    "Subject",
    "BehaviorSubject"
  ],
  "mappings": "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"
}
